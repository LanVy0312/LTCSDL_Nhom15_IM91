<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>